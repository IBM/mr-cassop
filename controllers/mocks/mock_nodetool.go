// Code generated by MockGen. DO NOT EDIT.
// Source: ./controllers/nodetool/nodetool.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/ibm/cassandra-operator/api/v1alpha1"
	reflect "reflect"
)

// MockNodetoolClient is a mock of NodetoolClient interface
type MockNodetoolClient struct {
	ctrl     *gomock.Controller
	recorder *MockNodetoolClientMockRecorder
}

// MockNodetoolClientMockRecorder is the mock recorder for MockNodetoolClient
type MockNodetoolClientMockRecorder struct {
	mock *MockNodetoolClient
}

// NewMockNodetoolClient creates a new mock instance
func NewMockNodetoolClient(ctrl *gomock.Controller) *MockNodetoolClient {
	mock := &MockNodetoolClient{ctrl: ctrl}
	mock.recorder = &MockNodetoolClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodetoolClient) EXPECT() *MockNodetoolClientMockRecorder {
	return m.recorder
}

// RepairKeyspace mocks base method
func (m *MockNodetoolClient) RepairKeyspace(cc *v1alpha1.CassandraCluster, keyspace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RepairKeyspace", cc, keyspace)
	ret0, _ := ret[0].(error)
	return ret0
}

// RepairKeyspace indicates an expected call of RepairKeyspace
func (mr *MockNodetoolClientMockRecorder) RepairKeyspace(cc, keyspace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepairKeyspace", reflect.TypeOf((*MockNodetoolClient)(nil).RepairKeyspace), cc, keyspace)
}
