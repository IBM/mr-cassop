{
  "annotations": {
    "list": []
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 247,
  "iteration": 1650623095016,
  "links": [
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": [
        "tlp",
        "cassandra"
      ],
      "title": "Other C* Dashboards",
      "type": "dashboards"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 20,
      "panels": [],
      "title": "Client Connections Overview",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "The number of connected clients to each Cassandra node. Plots both native and Thrift protocol connections if available. Since Cassandra 2.2, Thrift connections are not opened by default.\n\n##### Values\n\nA Cassandra node supports up to 128 connections per node. Values above 128 are not to be expected.\n\nIt is important, however, that there is a balanced number of connections  among the nodes.\n\n##### False Positives\n\nThis metric is pretty straightforward and should not fluctuate unexpectedly.\n\n##### Required Actions\n\nIf the number of connections approaches 128 per node, the client connection options and the load balancing strategy need to be revised.\n\n##### Warning\n\nNot balanced number of connections needs to be acted on.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "hiddenSeries": false,
      "id": 13,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideZero": false,
        "max": true,
        "min": false,
        "rightSide": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_Client_connectedNativeClients{environment=\"$env\", datacenter=\"$dc\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.connectedNativeClients",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.Client.connectedNativeClients.value, 3, 9)"
        },
        {
          "expr": "org_apache_cassandra_metrics_Client_connectedThriftClients{environment=\"$env\", datacenter=\"$dc\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.connectedThriftClients",
          "refId": "B",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.Client.connectedThriftClients.value, 3, 9)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Connections (per host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Client connections",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Number of client connections summed per data cetnter.\n\n##### Values\n\nAbsolute values depend on the number of nodes per data center.\n\n##### False Positives\n\nIt is possible to have significant differences among sum of connections to each data center. This can happen in situations when different data centers serve different cohorts of clients having peak load happening at different times.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "hiddenSeries": false,
      "id": 16,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "sum(org_apache_cassandra_metrics_Client_connectedNativeClients{environment=\"$env\", datacenter=\"$dc\"}) by (environment, datacenter)",
          "format": "time_series",
          "hide": false,
          "legendFormat": "{{environment}}.{{datacenter}}.connectedNativeClients",
          "refId": "A",
          "target": "aliasByNode(sumSeriesWithWildcards(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.Client.connectedNativeClients.value, 3), 2, 8)"
        },
        {
          "expr": "sum(org_apache_cassandra_metrics_Client_connectedThriftClients{environment=\"$env\", datacenter=\"$dc\"}) by (environment, datacenter)",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.connectedThriftClients",
          "refId": "B",
          "target": "aliasByNode(sumSeriesWithWildcards(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.Client.connectedThriftClients.value, 3), 2, 8)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Connections (per data center)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Client connections",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": "",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "A Cassandra client typically interacts with the cluster via a coordinator node, which is responsible for arranging the operation to be carried out.\n\nIf the operation takes too long the coordinator will time out the operation. This graph shows a rate of the timeouts happening per node.\n\n##### Values\n\nThis graph shows a per-minute rate of timeouts happening on each node, further broken down by the operation type.\n\n##### False Positives\n\nTimeouts should not happen under any circumstances. There are no false positives.\n\n##### Required Actions\n\nIf timeouts happen, their cause needs to be investigated. The top-level reasons for timeouts occurring include over-loaded nodes, misconfigured clients or ill-fitting data model (including sub-optimal queries).\n\n##### Warning\n\nTimeouts might percolate all the way to application level, where they can cause SLA degradation.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "hiddenSeries": false,
      "id": 14,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideZero": false,
        "max": true,
        "min": false,
        "rightSide": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_ClientRequest_Timeouts{environment=\"$env\", datacenter=\"$dc\", unit=\"OneMinuteRate\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{scope}}.m1",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.Timeouts.1MinuteRate, 3, 9)",
          "textEditor": false
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Timeouts (per host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "label": "Timeouts",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Similar to `Timeouts (per host)` graph, with the difference that this graph sums the timeouts per data center.\n\nThe purpose of this graph is to provide insight if it is isolated nodes having problems, or if the problem is more wide-spread.\n\n##### Values\n\nAmount of timeouts happening in each datacenter per minute, further split among each operation type.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 8
      },
      "hiddenSeries": false,
      "id": 15,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "sum(org_apache_cassandra_metrics_ClientRequest_Timeouts{environment=\"$env\", datacenter=\"$dc\", unit=\"OneMinuteRate\"}) by (environment, datacenter, scope)",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{scope}}.m1",
          "refId": "A",
          "target": "aliasByNode(sumSeriesWithWildcards(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.Timeouts.1MinuteRate, 3), 2, 8)",
          "textEditor": false
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Timeouts (per data center)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "label": "Timeouts",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": "",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "A Cassandra client typically interacts with the cluster via a coordinator node, which is responsible for arranging the operation to be carried out.\n\nFor certain operations, the coordinator needs responses from multiple nodes. If the coordinator can not possibly obtain responses from these nodes, an `Unavailable` error occurs.\n\nFor example, in a cluster with replication factor of three and two replicas down for a given partition, executing an operation with a `QUORUM` consistency will trigger an `Unavailable` error.\n\n##### Values\n\nThe values are a per-second rate of `Unavailable` errors occurring per node, further broken down by operation type.\n\n##### False Positives\n\nFalse positives should not happen.\n\nHowever, sometimes the cause of `Unavailable` errors is a discrepancy between keyspace topology and consistency used by the application. \n\n##### Required Actions\n\n`Unavailable` errors should not happen in clusters. If they do, they cause needs to be investigated and promptly addressed.\n\n##### Warning\n\n`Unavailable` errors can be a symptom of down nodes. Down nodes are generally a bad thing and should be investigated and promptly fixed.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "hiddenSeries": false,
      "id": 17,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideZero": false,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_ClientRequest_Unavailables{environment=\"$env\", datacenter=\"$dc\", unit=\"OneMinuteRate\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{scope}}.m1",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.Unavailables.1MinuteRate, 3, 9)",
          "textEditor": false
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Unavailables (per host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "label": "Unavailable errors",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": "",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Similar to `Unavailables (per host)`, this graph shows the number of `Unavailable` errors occurring in the cluster, but sums the errors by data center.\n\n##### Values\n\nThe values are the number of `Unavailaber` errors happening per minute in each data center, further broken down by operation type.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "hiddenSeries": false,
      "id": 18,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideZero": false,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "sum(org_apache_cassandra_metrics_ClientRequest_Unavailables{environment=\"$env\", datacenter=\"$dc\", unit=\"OneMinuteRate\"}) by (environment, datacenter, scope)",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{scope}}.m1",
          "refId": "B",
          "target": "aliasByNode(sumSeriesWithWildcards(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.Unavailables.1MinuteRate, 3), 2, 8)",
          "textEditor": false
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Unavailables (per data center)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "label": "Unavailable errors",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": "",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 21,
      "panels": [],
      "title": "Thread Pools",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Cassandra groups task of a particular type to its own thread pool. Monitoring thread pools is important to understand the saturation of the node.\n\nIn this graph, a thread pool responsible for handling client CQL requests is shown.\n\n##### Values\n\nThe values are the current number of tasks in a particular state. The states tracked are:\n* **Active**: tasks actively worked on.\n* **Pending**: queued tasks.\n* **Blocked**: tasks blocked due to queue saturation. \n\n##### False Positives\n\nIt is acceptable for the `Pending` and `Blocked` tasks to have non-zero value.\n\n##### Required Actions\n\nIn case of sharp increase, or constant values in order of several tens, node capacity assessment needs to happen.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 23
      },
      "hiddenSeries": false,
      "id": 3,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_ThreadPools{environment=\"$env\", datacenter=\"$dc\", status_pool=\"ActiveTasks\", thread_type=\"transport\", thread_pool=\"Native-Transport-Requests\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{thread_pool}}.{{status_pool}}",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ThreadPools.transport.Native-Transport-Requests.ActiveTasks.value, 3, 11)"
        },
        {
          "expr": "org_apache_cassandra_metrics_ThreadPools{environment=\"$env\", datacenter=\"$dc\", status_pool=\"PendingTasks\", thread_type=\"transport\", thread_pool=\"Native-Transport-Requests\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{thread_pool}}.{{status_pool}}",
          "refId": "D",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ThreadPools.transport.Native-Transport-Requests.PendingTasks.value, 3, 11)"
        },
        {
          "expr": "org_apache_cassandra_metrics_ThreadPools{environment=\"$env\", datacenter=\"$dc\", status_pool=\"CurrentlyBlockedTasks\", thread_type=\"transport\", thread_pool=\"Native-Transport-Requests\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{thread_pool}}.{{status_pool}}",
          "refId": "C",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ThreadPools.transport.Native-Transport-Requests.CurrentlyBlockedTasks.value, 3, 11)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Native Requests Pool (per host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Threads",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Cassandra groups task of a particular type to its own thread pool. Monitoring thread pools is important to understand the saturation of the node.\n\nThis thread pool handles coordinator requests to the cluster.\n\n##### Values\n\nThe values are the current number of tasks in a particular state. The states tracked are:\n\n* **Active**: tasks actively worked on.\n* **Pending**: queued tasks.\n* **Blocked**: tasks blocked due to queue saturation.\n\n##### False Positives\n\nIt is acceptable for the `Pending` and `Blocked` tasks to have non-zero value.\n\n##### Required Actions\n\nIn case of sharp increase, or constant values in order of several tens, node capacity assessment needs to happen.",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 23
      },
      "hiddenSeries": false,
      "id": 4,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_ThreadPools{environment=\"$env\", datacenter=\"$dc\", status_pool=\"ActiveTasks\", thread_type=\"request\", thread_pool=\"RequestResponseStage\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{thread_pool}}.{{status_pool}}",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ThreadPools.request.RequestResponseStage.ActiveTasks.value, 3, 11)"
        },
        {
          "expr": "org_apache_cassandra_metrics_ThreadPools{environment=\"$env\", datacenter=\"$dc\", status_pool=\"PendingTasks\", thread_type=\"request\", thread_pool=\"RequestResponseStage\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{thread_pool}}.{{status_pool}}",
          "refId": "B",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ThreadPools.request.RequestResponseStage.PendingTasks.value, 3, 11)"
        },
        {
          "expr": "org_apache_cassandra_metrics_ThreadPools{environment=\"$env\", datacenter=\"$dc\", status_pool=\"CurrentlyBlockedTasks\", thread_type=\"request\", thread_pool=\"RequestResponseStage\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{thread_pool}}.{{status_pool}}",
          "refId": "C",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ThreadPools.request.RequestResponseStage.CurrentlyBlockedTasks.value, 3, 11)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Coordinator Requests Pool (per host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Threads",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 22,
      "panels": [],
      "title": "Statements",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Cassandra allows server-side caching of CQL queries to avoid their repetitive parsing, which yields certain performance benefits.\n\nThis graph shows the number of statements cached. \n\n##### Values\n\nThe values are a number of cached statements per node. The exact value of the statements in cache varies, because the the cache size is configured (since Cassandra 3.6) in bytes, rather than statement counts.\n\n##### False Positives\n\nMonotonic values in orders of hundreds can signal saturated cache. However, this situation needs to be correlated with the `Prepared Statements Eviction` graph to prove the saturation.\n\n##### Required Actions\n\nIt is unlikely the application actually needs the whole cache. If the saturation happens, it's typically a sign of repetitive statement preparation, which is sub-optimal.\n\n##### Warning\n\nSaturated prepared statements cache signals misuse on the application level, which should be corrected.",
      "fill": 1,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 31
      },
      "id": 5,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_CQL_PreparedStatementsCount{environment=\"$env\", datacenter=\"$dc\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.PreparedStatementsCount",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.CQL.PreparedStatementsCount.value, 3)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Prepared Statements Cache (by host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Statements",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Cassandra allows server-side caching of CQL queries to avoid their repetitive parsing, which yields certain performance benefits.\n\nThis graph shows the eviction of prepared statements from their cache.\n\n##### Values\n\nThe values represent the number of statements evicted per second per node.\n\n##### False Positives\n\nIt is acceptable for a Cassandra node to evict some statements. This should happen sporadically, and exclusively after operator-triggered operations.\n\n##### Required Actions\n\nPrepared statement eviction occurring signals misuse at the application level which needs to be investigated and remedied.",
      "fill": 1,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 31
      },
      "id": 8,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "deriv(org_apache_cassandra_metrics_CQL_PreparedStatementsEvicted{environment=\"$env\", datacenter=\"$dc\"}[5m])",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.PreparedStatementsEvicted",
          "refId": "A",
          "target": "aliasByNode(perSecond(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.CQL.PreparedStatementsEvicted.count), 3)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Prepared Statements Eviction (by host, perSecond() issues)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "label": "Eviction rate",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "This graph shows the ratio between prepared and regular statements executed.\n\n##### Values\n\nThe closer to `1.0` the value, the bigger the portion of prepared statements executed.\n\nThe values are reported per each host.\n\n##### Required Actions\n\nBased on the work load, if this ratio swings towards the unexpected type of requests executed, an investigation of the application should ensue.",
      "fill": 1,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 38
      },
      "id": 6,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "org_apache_cassandra_metrics_CQL_PreparedStatementsRatio{environment=\"$env\", datacenter=\"$dc\"}",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.PreparedStatementsRatio",
          "refId": "A",
          "target": "aliasByNode(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.CQL.PreparedStatementsRatio.value, 3)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Prepared vs Unprepared (by host)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "max": "1",
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Unlike prepared statements, the regular statements need to be parsed every time they are executed. Because of this, they might not be desired if performance is critical.\n\n##### Values\n\nCassandra reports only the total number of regular statements executed over its uptime. Therefore we're using Grafana's `perSecond()` aggregation to visualise a per-second rate of regular statement execution per host.\n\n##### False Positives\n\nRegular statements are sometimes inevitable. For example, the java-driver performs several regular statements upon initialising its connection in order to learn the cluster topology etc.",
      "fill": 1,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 38
      },
      "id": 19,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "deriv(org_apache_cassandra_metrics_CQL_RegularStatementsExecuted{environment=\"$env\", datacenter=\"$dc\"}[5m])",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.RegularStatementsExecuted",
          "refId": "A",
          "target": "aliasByNode(perSecond(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.CQL.RegularStatementsExecuted.count), 3)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Regular Statements Executed (by host, perSecond() issues)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "label": "Statement rate",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 45
      },
      "id": 23,
      "panels": [],
      "title": "Client Requests",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Cassandra exposes certain metrics related Light-Weight Transactions (LWT) that might indicate problems:\n* **ConditionNotMet**: indicates a failure to meet a condition requested by the transaction. This might indicate a contention in modifying a single cell.\n* **UnfinishedCommit** indicates premature conclusions of Paxos rounds, which is mundane by itself and has mundane consequences too.\n\n##### Values\n\nThe values are per-second rates of both problematic behaviours occurring, broken down per node and per LWT type (read or write).\n\n##### False Positives\n\nIt is acceptable for these metrics to be non-zero if their values are small and happen infrequently.\n\n##### Required Actions\n\nIn case the values are constantly non-zero, the use-case needs to revised as it might be designed in a sub-optimal way.",
      "fill": 1,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 46
      },
      "id": 11,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "deriv(org_apache_cassandra_metrics_ClientRequest_ConditionNotMet{environment=\"$env\", datacenter=\"$dc\"}[5m])",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{scope}}.ConditionNotMet",
          "refId": "A",
          "target": "aliasByNode(perSecond(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.ConditionNotMet.count), 3, 9, 10)"
        },
        {
          "expr": "deriv(org_apache_cassandra_metrics_ClientRequest_UnfinishedCommit{environment=\"$env\", datacenter=\"$dc\"}[5m])",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{scope}}.UnfinishedCommit",
          "refId": "C",
          "target": "aliasByNode(perSecond(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.UnfinishedCommit.count), 3, 9, 10)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "LWT Problems (by host, perSecond() issues)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ops",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": false
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "uid": "$datasource"
      },
      "description": "Cassandra tracks total latency accumulated while carrying out a particular request. This happens on the coordinator level and represents the total time the request has spent in the cluster.\n\n##### Values\n\nCassandra reports an ever-raising value representing microseconds spent. For visualisation we are using Grafana's derivative to gauge any trends.\n\n##### Required Actions\n\nTrend changes in the values shown in these graphs indicate the subtle degradations that can happen in a Cassandra cluster and should trigger an investigation.",
      "fill": 1,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 46
      },
      "id": 12,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": false,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,

      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "deriv(org_apache_cassandra_metrics_ClientRequest_TotalLatency[5m])",
          "format": "time_series",
          "legendFormat": "{{environment}}.{{datacenter}}.{{host}}.{{scope}}",
          "refId": "D",
          "target": "aliasByNode(derivative(cassandra.$env.$dc.$host.org.apache.cassandra.metrics.ClientRequest.*.TotalLatency.count), 3, 9)"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Total Latency (possible derivative() issues)",
      "tooltip": {
        "shared": false,
        "sort": 2,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "ms",
          "logBase": 1,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    }
  ],
  "refresh": "30s",
  "schemaVersion": 35,
  "style": "dark",
  "tags": [
    "cassandra",
    "tlp"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "default",
          "value": "default"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "label_values(org_apache_cassandra_metrics_Storage_Load, namespace)",
        "hide": 0,
        "includeAll": false,
        "label": "Namespace",
        "multi": false,
        "name": "ns",
        "options": [],
        "query": {
          "query": "label_values(org_apache_cassandra_metrics_Storage_Load, namespace)",
          "refId": "Prometheus-ns-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "",
        "hide": 2,
        "includeAll": false,
        "label": "Environment",
        "multi": false,
        "name": "env",
        "options": [],
        "query": {
          "query": "label_values(org_apache_cassandra_metrics_Storage_Load, environment)",
          "refId": "Prometheus-env-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query"
      },
      {
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "label_values(org_apache_cassandra_metrics_Storage_Load,app_kubernetes_io_name)",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "instance",
        "options": [],
        "query": {
          "query": "label_values(org_apache_cassandra_metrics_Storage_Load,app_kubernetes_io_name)",
          "refId": "Prometheus-instance-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "",
        "hide": 0,
        "includeAll": false,
        "label": "Data Center",
        "multi": false,
        "name": "dc",
        "options": [],
        "query": {
          "query": "label_values(org_apache_cassandra_metrics_Storage_Load, datacenter)",
          "refId": "Prometheus-dc-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "$datasource"
        },
        "definition": "",
        "hide": 0,
        "includeAll": true,
        "label": "Host",
        "multi": false,
        "name": "host",
        "options": [],
        "query": {
          "query": "label_values(org_apache_cassandra_metrics_Storage_Load, host)",
          "refId": "Prometheus-host-Variable-Query"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "browser",
  "title": "Cassandra TLP - Client Connections",
  "version": null
}
