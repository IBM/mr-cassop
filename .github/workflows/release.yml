name: Release Workflow

on:
  release:
    types:
    - published

env:
  HELM_VERSION: v3.9.2
  ICR_USERNAME: iamapikey
  ICR_PASSWORD: ${{ secrets.IBM_CLOUD_API_KEY }}
  ICR_NAMESPACE: cassandra-operator
  HELM_REPO_USER: ${{ secrets.ARTIFACTORY_USER }}
  HELM_REPO_PASS: ${{ secrets.ARTIFACTORY_PASS }}
  HELM_REPO: ${{ secrets.ARTIFACTORY_HELM_REPO }}
  CASSANDRA_VERSION: 3.11.13
  ICARUS_VERSION: 2.0.4
  JMX_EXPORTER_VERSION: 0.17.0

jobs:
  operator:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Prepare image metadata
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          us.icr.io/${{ env.ICR_NAMESPACE }}/cassandra-operator
          uk.icr.io/${{ env.ICR_NAMESPACE }}/cassandra-operator
          de.icr.io/${{ env.ICR_NAMESPACE }}/cassandra-operator
          au.icr.io/${{ env.ICR_NAMESPACE }}/cassandra-operator
          jp.icr.io/${{ env.ICR_NAMESPACE }}/cassandra-operator
        tags: type=ref,event=tag

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to IBM Cloud Container Registry US
      uses: docker/login-action@v2
      with:
        registry: us.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry UK
      uses: docker/login-action@v2
      with:
        registry: uk.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry DE
      uses: docker/login-action@v2
      with:
        registry: de.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry AU
      uses: docker/login-action@v2
      with:
        registry: au.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry JP
      uses: docker/login-action@v2
      with:
        registry: jp.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Build and push operator image
      uses: docker/build-push-action@v3
      with:
        push: true
        file: Dockerfile
        context: ./
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}


  cassandra:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Prepare image metadata
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          us.icr.io/${{ env.ICR_NAMESPACE }}/cassandra
          uk.icr.io/${{ env.ICR_NAMESPACE }}/cassandra
          de.icr.io/${{ env.ICR_NAMESPACE }}/cassandra
          au.icr.io/${{ env.ICR_NAMESPACE }}/cassandra
          jp.icr.io/${{ env.ICR_NAMESPACE }}/cassandra
        tags: type=ref,prefix=${{ env.CASSANDRA_VERSION }}-,event=tag

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to IBM Cloud Container Registry US
      uses: docker/login-action@v2
      with:
        registry: us.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry UK
      uses: docker/login-action@v2
      with:
        registry: uk.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry DE
      uses: docker/login-action@v2
      with:
        registry: de.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry AU
      uses: docker/login-action@v2
      with:
        registry: au.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry JP
      uses: docker/login-action@v2
      with:
        registry: jp.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Build and push cassandra image
      uses: docker/build-push-action@v3
      with:
        push: true
        file: ./cassandra/Dockerfile
        context: ./cassandra
        build-args: |
          CASSANDRA_VERSION=${{ env.CASSANDRA_VERSION }}
          JMX_EXPORTER_VERSION=${{ env.JMX_EXPORTER_VERSION }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  prober:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Prepare image metadata
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          us.icr.io/${{ env.ICR_NAMESPACE }}/prober
          uk.icr.io/${{ env.ICR_NAMESPACE }}/prober
          de.icr.io/${{ env.ICR_NAMESPACE }}/prober
          au.icr.io/${{ env.ICR_NAMESPACE }}/prober
          jp.icr.io/${{ env.ICR_NAMESPACE }}/prober
        tags: type=ref,event=tag

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to IBM Cloud Container Registry US
      uses: docker/login-action@v2
      with:
        registry: us.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry UK
      uses: docker/login-action@v2
      with:
        registry: uk.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry DE
      uses: docker/login-action@v2
      with:
        registry: de.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry AU
      uses: docker/login-action@v2
      with:
        registry: au.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry JP
      uses: docker/login-action@v2
      with:
        registry: jp.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Build and push prober image
      uses: docker/build-push-action@v3
      with:
        push: true
        file: ./prober/Dockerfile
        context: ./prober
        build-args: |
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  jolokia:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Prepare image metadata
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          us.icr.io/${{ env.ICR_NAMESPACE }}/jolokia
          uk.icr.io/${{ env.ICR_NAMESPACE }}/jolokia
          de.icr.io/${{ env.ICR_NAMESPACE }}/jolokia
          au.icr.io/${{ env.ICR_NAMESPACE }}/jolokia
          jp.icr.io/${{ env.ICR_NAMESPACE }}/jolokia
        tags: type=ref,event=tag

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to IBM Cloud Container Registry US
      uses: docker/login-action@v2
      with:
        registry: us.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry UK
      uses: docker/login-action@v2
      with:
        registry: uk.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry DE
      uses: docker/login-action@v2
      with:
        registry: de.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry AU
      uses: docker/login-action@v2
      with:
        registry: au.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry JP
      uses: docker/login-action@v2
      with:
        registry: jp.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Build and push jolokia image
      uses: docker/build-push-action@v3
      with:
        push: true
        file: ./jolokia/Dockerfile
        context: ./jolokia
        build-args: |
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  icarus:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Prepare image metadata
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          us.icr.io/${{ env.ICR_NAMESPACE }}/icarus
          uk.icr.io/${{ env.ICR_NAMESPACE }}/icarus
          de.icr.io/${{ env.ICR_NAMESPACE }}/icarus
          au.icr.io/${{ env.ICR_NAMESPACE }}/icarus
          jp.icr.io/${{ env.ICR_NAMESPACE }}/icarus
        tags: type=ref,event=tag

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to IBM Cloud Container Registry US
      uses: docker/login-action@v2
      with:
        registry: us.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry UK
      uses: docker/login-action@v2
      with:
        registry: uk.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry DE
      uses: docker/login-action@v2
      with:
        registry: de.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry AU
      uses: docker/login-action@v2
      with:
        registry: au.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Login to IBM Cloud Container Registry JP
      uses: docker/login-action@v2
      with:
        registry: jp.icr.io
        username: ${{ env.ICR_USERNAME }}
        password: ${{ env.ICR_PASSWORD }}

    - name: Build and push icarus image
      uses: docker/build-push-action@v3
      with:
        push: true
        file: ./icarus/Dockerfile
        context: ./icarus
        build-args: |
          ICARUS_VERSION: ${{ env.ICARUS_VERSION }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  helm-release:
    runs-on: ubuntu-latest
    needs: [operator, cassandra, prober, jolokia, icarus]
    outputs:
      tag: ${{ steps.get_release_tag.outputs.tag }}
    steps:
    - uses: actions/checkout@v3

    - id: get_release_tag
      run: echo "::set-output name=tag::${GITHUB_REF##*/}"

    - name: Setup Helm
      uses: azure/setup-helm@v3.3
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Change versions
      run: |
        mkdir bin
        curl -Lo ./bin/yq https://github.com/mikefarah/yq/releases/download/3.4.0/yq_linux_amd64
        chmod +x ./bin/yq
        ./bin/yq w -i cassandra-operator/values.yaml 'container.image' $(./bin/yq r cassandra-operator/values.yaml 'container.image' | sed "s/:.*/:${{ steps.get_release_tag.outputs.tag }}/")
        ./bin/yq w -i cassandra-operator/values.yaml 'proberImage' $(./bin/yq r cassandra-operator/values.yaml 'proberImage' | sed "s/:.*/:${{ steps.get_release_tag.outputs.tag }}/")
        ./bin/yq w -i cassandra-operator/values.yaml 'cassandraImage' $(./bin/yq r cassandra-operator/values.yaml 'cassandraImage' | sed "s/:.*/:${{ env.CASSANDRA_VERSION }}-${{ steps.get_release_tag.outputs.tag }}/")
        ./bin/yq w -i cassandra-operator/values.yaml 'jolokiaImage' $(./bin/yq r cassandra-operator/values.yaml 'jolokiaImage' | sed "s/:.*/:${{ steps.get_release_tag.outputs.tag }}/")
        ./bin/yq w -i cassandra-operator/values.yaml 'icarusImage' $(./bin/yq r cassandra-operator/values.yaml 'icarusImage' | sed "s/:.*/:${{ steps.get_release_tag.outputs.tag }}/")
        ./bin/yq w -i cassandra-operator/Chart.yaml 'appVersion' $(./bin/yq r cassandra-operator/Chart.yaml 'appVersion' | sed "s/:.*/:${{ steps.get_release_tag.outputs.tag }}/")
        ./bin/yq w -i cassandra-operator/Chart.yaml 'version' $(./bin/yq r cassandra-operator/Chart.yaml 'version' | sed "s/:.*/:${{ steps.get_release_tag.outputs.tag }}/")

    - name: Package cassandra-operator chart
      env:
        VERSION: ${{ steps.get_release_tag.outputs.tag }}
      run: helm package cassandra-operator --version=${{ steps.get_release_tag.outputs.tag }} --app-version=${{ steps.get_release_tag.outputs.tag }}

    - name: Publish cassandra-operator chart
      env:
        VERSION: ${{ steps.get_release_tag.outputs.tag }}
      run: |
        md5sum_var=$(md5sum ./cassandra-operator-${{ steps.get_release_tag.outputs.tag }}.tgz | awk '{ print $1 }')
        sha1sum_var=$(sha1sum ./cassandra-operator-${{ steps.get_release_tag.outputs.tag }}.tgz | awk '{ print $1 }')
        curl -s -o /dev/null -w '%{http_code}' -u$HELM_REPO_USER:$HELM_REPO_PASS -T ./cassandra-operator-${{ steps.get_release_tag.outputs.tag }}.tgz --header X-Checksum-MD5:$md5sum_var --header X-Checksum-Sha1:$sha1sum_var $HELM_REPO/cassandra-operator-${{ steps.get_release_tag.outputs.tag }}.tgz

    - name: Commit and push updated values.yaml
      env:
        VERSION: ${{ steps.get_release_tag.outputs.tag }}
      run: |
        git config --global user.email ""
        git config --global user.name "Github Actions CI"
        git commit -m "Release ${{ steps.get_release_tag.outputs.tag }}" cassandra-operator/values.yaml cassandra-operator/Chart.yaml
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main


  docs:
    name: Publish Docs
    needs: [helm-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Publish docs website
      env:
        USE_SSH: false
        GIT_USER: git
        CURRENT_BRANCH: main
        DEPLOYMENT_BRANCH: gh-pages
        GIT_PASS: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "gh-actions"
        cd ./docs
        npm ci
        npx docusaurus deploy
    - name: Slack notification
      run: |
        curl -X POST ${{ secrets.SLACK_WEBHOOK }} \
          -H 'Content-type: application/json; charset=utf-8' \
          --data \
          '{
             "channel": "#cassandra-releases",
             "username": "actions@github.com",
             "icon_url": "https://raw.githubusercontent.com/docker-library/docs/fb8596d619703fc556e6d56e12584d8bfdf13785/cassandra/logo.png",
             "blocks": [
               {
                 "type": "section",
                 "text": {
                   "type": "mrkdwn",
                   "text": ":rocket:A new version of the Cassandra Operator has been released *${{ needs.helm-release.outputs.tag }}*"
                 }
               },
               {
                 "type": "section",
                 "text": {
                   "type": "mrkdwn",
                   "text": "Take a look at the <https://github.com/TheWeatherCompany/cassandra-operator/releases/tag/${{ needs.helm-release.outputs.tag }}|release notes> to get more details.\nRead <https://cassandra-operator-docs.dev.sun.weather.com/|official documentation> to get started."
                 }
               }
             ]
           }'

    - name: Slack notification
      run: |
        curl -X POST ${{ secrets.SLACK_WEBHOOK }} \
          -H 'Content-type: application/json; charset=utf-8' \
          --data \
          '{
             "channel": "#icm-questions",
             "username": "actions@github.com",
             "icon_url": "https://raw.githubusercontent.com/docker-library/docs/fb8596d619703fc556e6d56e12584d8bfdf13785/cassandra/logo.png",
             "blocks": [
               {
                 "type": "section",
                 "text": {
                   "type": "mrkdwn",
                   "text": ":rocket:A new version of the Cassandra Operator has been released *${{ needs.helm-release.outputs.tag }}*"
                 }
               },
               {
                 "type": "section",
                 "text": {
                   "type": "mrkdwn",
                   "text": "Take a look at the <https://github.com/TheWeatherCompany/cassandra-operator/releases/tag/${{ needs.helm-release.outputs.tag }}|release notes> to get more details.\nRead <https://cassandra-operator-docs.dev.sun.weather.com/|official documentation> to get started."
                 }
               }
             ]
           }'
